"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("utils_prover_ts",{

/***/ "./utils/prover.ts":
/*!*************************!*\
  !*** ./utils/prover.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_noir_noirBrowser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils/noir/noirBrowser */ \"./utils/noir/noirBrowser.ts\");\n// @ts-ignore\n\n// // Add an event listener for the message event\nonmessage = async (event)=>{\n    try {\n        cosole;\n        const { input } = event.data;\n        function changeValues(a) {\n            const val = a[0] == \"-\" ? a.substring(1) : a;\n            return val;\n        }\n        const input_2 = {\n            c1: {\n                real: {\n                    sign: input.A[0] == \"-\",\n                    value: changeValues(input.A)\n                },\n                imag: {\n                    sign: input.B[0] == \"-\",\n                    value: changeValues(input.B)\n                }\n            },\n            c2: {\n                real: {\n                    sign: input.C[0] == \"-\",\n                    value: changeValues(input.C)\n                },\n                imag: {\n                    sign: input.D[0] == \"-\",\n                    value: changeValues(input.D)\n                }\n            },\n            out_sub: input.subAns,\n            out_mul: input.mulAns,\n            out_div: input.divAns\n        };\n        console.log(input_2);\n        // const input_2 = Object.entries(input).reduce((newObj, [key, value]) => {\n        //   //changed format a bit\n        //   newObj[key] = (value as number).toString();\n        //   return newObj;\n        // }, {});\n        const noir = new _utils_noir_noirBrowser__WEBPACK_IMPORTED_MODULE_0__.NoirBrowser();\n        await noir.compile();\n        const proof = await noir.createProof({\n            input: input_2\n        });\n        console.log(input_2);\n        postMessage(proof);\n    } catch (err) {\n        console.log(err);\n        postMessage(err);\n    } finally{\n        close();\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9wcm92ZXIudHMiLCJtYXBwaW5ncyI6Ijs7QUFBQSxhQUFhO0FBQzZDO0FBRTFELGlEQUFpRDtBQUNqREMsWUFBWSxPQUFPQztJQUNqQixJQUFJO1FBQ0ZDO1FBQ0EsTUFBTSxFQUFFQyxLQUFLLEVBQUUsR0FBR0YsTUFBTUcsSUFBSTtRQUU1QixTQUFTQyxhQUFhQyxDQUFTO1lBQzdCLE1BQU1DLE1BQU1ELENBQUMsQ0FBQyxFQUFFLElBQUksTUFBTUEsRUFBRUUsU0FBUyxDQUFDLEtBQUtGO1lBQzNDLE9BQU9DO1FBQ1Q7UUFDQSxNQUFNRSxVQUFVO1lBQ2RDLElBQUk7Z0JBQ0ZDLE1BQU07b0JBQ0pDLE1BQU1ULE1BQU1VLENBQUMsQ0FBQyxFQUFFLElBQUk7b0JBQ3BCQyxPQUFPVCxhQUFhRixNQUFNVSxDQUFDO2dCQUM3QjtnQkFDQUUsTUFBTTtvQkFDSkgsTUFBTVQsTUFBTWEsQ0FBQyxDQUFDLEVBQUUsSUFBSTtvQkFDcEJGLE9BQU9ULGFBQWFGLE1BQU1hLENBQUM7Z0JBQzdCO1lBQ0Y7WUFDQUMsSUFBSTtnQkFDRk4sTUFBTTtvQkFDSkMsTUFBTVQsTUFBTWUsQ0FBQyxDQUFDLEVBQUUsSUFBSTtvQkFDcEJKLE9BQU9ULGFBQWFGLE1BQU1lLENBQUM7Z0JBQzdCO2dCQUNBSCxNQUFNO29CQUNKSCxNQUFNVCxNQUFNZ0IsQ0FBQyxDQUFDLEVBQUUsSUFBSTtvQkFDcEJMLE9BQU9ULGFBQWFGLE1BQU1nQixDQUFDO2dCQUM3QjtZQUNGO1lBQ0FDLFNBQVNqQixNQUFNa0IsTUFBTTtZQUNyQkMsU0FBU25CLE1BQU1vQixNQUFNO1lBQ3JCQyxTQUFTckIsTUFBTXNCLE1BQU07UUFDdkI7UUFDQUMsUUFBUUMsR0FBRyxDQUFDbEI7UUFDWiwyRUFBMkU7UUFDM0UsMkJBQTJCO1FBQzNCLGdEQUFnRDtRQUNoRCxtQkFBbUI7UUFDbkIsVUFBVTtRQUVWLE1BQU1tQixPQUFPLElBQUk3QixnRUFBV0E7UUFDNUIsTUFBTTZCLEtBQUtDLE9BQU87UUFDbEIsTUFBTUMsUUFBUSxNQUFNRixLQUFLRyxXQUFXLENBQUM7WUFBRTVCLE9BQU9NO1FBQVE7UUFDdERpQixRQUFRQyxHQUFHLENBQUNsQjtRQUNadUIsWUFBWUY7SUFDZCxFQUFFLE9BQU9HLEtBQUs7UUFDWlAsUUFBUUMsR0FBRyxDQUFDTTtRQUNaRCxZQUFZQztJQUNkLFNBQVU7UUFDUkM7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3V0aWxzL3Byb3Zlci50cz85OGJkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1pZ25vcmVcbmltcG9ydCB7IE5vaXJCcm93c2VyIH0gZnJvbSBcIi4vLi4vdXRpbHMvbm9pci9ub2lyQnJvd3NlclwiO1xuXG4vLyAvLyBBZGQgYW4gZXZlbnQgbGlzdGVuZXIgZm9yIHRoZSBtZXNzYWdlIGV2ZW50XG5vbm1lc3NhZ2UgPSBhc3luYyAoZXZlbnQpID0+IHtcbiAgdHJ5IHtcbiAgICBjb3NvbGVcbiAgICBjb25zdCB7IGlucHV0IH0gPSBldmVudC5kYXRhO1xuXG4gICAgZnVuY3Rpb24gY2hhbmdlVmFsdWVzKGE6IHN0cmluZykge1xuICAgICAgY29uc3QgdmFsID0gYVswXSA9PSBcIi1cIiA/IGEuc3Vic3RyaW5nKDEpIDogYTtcbiAgICAgIHJldHVybiB2YWw7XG4gICAgfVxuICAgIGNvbnN0IGlucHV0XzIgPSB7XG4gICAgICBjMToge1xuICAgICAgICByZWFsOiB7XG4gICAgICAgICAgc2lnbjogaW5wdXQuQVswXSA9PSBcIi1cIixcbiAgICAgICAgICB2YWx1ZTogY2hhbmdlVmFsdWVzKGlucHV0LkEpLFxuICAgICAgICB9LFxuICAgICAgICBpbWFnOiB7XG4gICAgICAgICAgc2lnbjogaW5wdXQuQlswXSA9PSBcIi1cIixcbiAgICAgICAgICB2YWx1ZTogY2hhbmdlVmFsdWVzKGlucHV0LkIpLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgIGMyOiB7XG4gICAgICAgIHJlYWw6IHtcbiAgICAgICAgICBzaWduOiBpbnB1dC5DWzBdID09IFwiLVwiLFxuICAgICAgICAgIHZhbHVlOiBjaGFuZ2VWYWx1ZXMoaW5wdXQuQyksXG4gICAgICAgIH0sXG4gICAgICAgIGltYWc6IHtcbiAgICAgICAgICBzaWduOiBpbnB1dC5EWzBdID09IFwiLVwiLFxuICAgICAgICAgIHZhbHVlOiBjaGFuZ2VWYWx1ZXMoaW5wdXQuRCksXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgb3V0X3N1YjogaW5wdXQuc3ViQW5zLFxuICAgICAgb3V0X211bDogaW5wdXQubXVsQW5zLFxuICAgICAgb3V0X2RpdjogaW5wdXQuZGl2QW5zLFxuICAgIH07XG4gICAgY29uc29sZS5sb2coaW5wdXRfMik7XG4gICAgLy8gY29uc3QgaW5wdXRfMiA9IE9iamVjdC5lbnRyaWVzKGlucHV0KS5yZWR1Y2UoKG5ld09iaiwgW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgLy8gICAvL2NoYW5nZWQgZm9ybWF0IGEgYml0XG4gICAgLy8gICBuZXdPYmpba2V5XSA9ICh2YWx1ZSBhcyBudW1iZXIpLnRvU3RyaW5nKCk7XG4gICAgLy8gICByZXR1cm4gbmV3T2JqO1xuICAgIC8vIH0sIHt9KTtcblxuICAgIGNvbnN0IG5vaXIgPSBuZXcgTm9pckJyb3dzZXIoKTtcbiAgICBhd2FpdCBub2lyLmNvbXBpbGUoKTtcbiAgICBjb25zdCBwcm9vZiA9IGF3YWl0IG5vaXIuY3JlYXRlUHJvb2YoeyBpbnB1dDogaW5wdXRfMiB9KTtcbiAgICBjb25zb2xlLmxvZyhpbnB1dF8yKTtcbiAgICBwb3N0TWVzc2FnZShwcm9vZik7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgcG9zdE1lc3NhZ2UoZXJyKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBjbG9zZSgpO1xuICB9XG59O1xuIl0sIm5hbWVzIjpbIk5vaXJCcm93c2VyIiwib25tZXNzYWdlIiwiZXZlbnQiLCJjb3NvbGUiLCJpbnB1dCIsImRhdGEiLCJjaGFuZ2VWYWx1ZXMiLCJhIiwidmFsIiwic3Vic3RyaW5nIiwiaW5wdXRfMiIsImMxIiwicmVhbCIsInNpZ24iLCJBIiwidmFsdWUiLCJpbWFnIiwiQiIsImMyIiwiQyIsIkQiLCJvdXRfc3ViIiwic3ViQW5zIiwib3V0X211bCIsIm11bEFucyIsIm91dF9kaXYiLCJkaXZBbnMiLCJjb25zb2xlIiwibG9nIiwibm9pciIsImNvbXBpbGUiLCJwcm9vZiIsImNyZWF0ZVByb29mIiwicG9zdE1lc3NhZ2UiLCJlcnIiLCJjbG9zZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./utils/prover.ts\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ !function() {
/******/ 	__webpack_require__.h = function() { return "2516e575b1ef5043"; }
/******/ }();
/******/ 
/******/ }
);