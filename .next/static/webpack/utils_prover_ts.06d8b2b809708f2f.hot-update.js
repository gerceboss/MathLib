"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("utils_prover_ts",{

/***/ "./utils/prover.ts":
/*!*************************!*\
  !*** ./utils/prover.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_noir_noirBrowser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils/noir/noirBrowser */ \"./utils/noir/noirBrowser.ts\");\n// @ts-ignore\n\n// // Add an event listener for the message event\nonmessage = async (event)=>{\n    try {\n        const { input } = event.data;\n        const hexInputObj = Object.entries(input).reduce((newObj, param)=>{\n            let [key, value] = param;\n            //changed format a bit\n            if (key == A) {}\n            newObj[key] = value.toString();\n            return newObj;\n        }, {});\n        const noir = new _utils_noir_noirBrowser__WEBPACK_IMPORTED_MODULE_0__.NoirBrowser();\n        await noir.compile();\n        const proof = await noir.createProof({\n            input: hexInputObj\n        });\n        console.log(hexInputObj);\n        postMessage(proof);\n    } catch (err) {\n        console.log(err);\n        postMessage(err);\n    } finally{\n        close();\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9wcm92ZXIudHMiLCJtYXBwaW5ncyI6Ijs7QUFBQSxhQUFhO0FBQzZDO0FBRTFELGlEQUFpRDtBQUNqREMsWUFBWSxPQUFPQztJQUNqQixJQUFJO1FBQ0YsTUFBTSxFQUFFQyxLQUFLLEVBQUUsR0FBR0QsTUFBTUUsSUFBSTtRQUM1QixNQUFNQyxjQUFjQyxPQUFPQyxPQUFPLENBQUNKLE9BQU9LLE1BQU0sQ0FBQyxDQUFDQztnQkFBUSxDQUFDQyxLQUFLQyxNQUFNO1lBQ3BFLHNCQUFzQjtZQUN0QixJQUFHRCxPQUFLRSxHQUFFLENBRVY7WUFDQUgsTUFBTSxDQUFDQyxJQUFJLEdBQUcsTUFBa0JHLFFBQVE7WUFDeEMsT0FBT0o7UUFDVCxHQUFHLENBQUM7UUFFSixNQUFNSyxPQUFPLElBQUlkLGdFQUFXQTtRQUM1QixNQUFNYyxLQUFLQyxPQUFPO1FBQ2xCLE1BQU1DLFFBQVEsTUFBTUYsS0FBS0csV0FBVyxDQUFDO1lBQUVkLE9BQU9FO1FBQVk7UUFDMURhLFFBQVFDLEdBQUcsQ0FBQ2Q7UUFDWmUsWUFBWUo7SUFDZCxFQUFFLE9BQU9LLEtBQUs7UUFDWkgsUUFBUUMsR0FBRyxDQUFDRTtRQUNaRCxZQUFZQztJQUNkLFNBQVU7UUFDUkM7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3V0aWxzL3Byb3Zlci50cz85OGJkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1pZ25vcmVcbmltcG9ydCB7IE5vaXJCcm93c2VyIH0gZnJvbSBcIi4vLi4vdXRpbHMvbm9pci9ub2lyQnJvd3NlclwiO1xuXG4vLyAvLyBBZGQgYW4gZXZlbnQgbGlzdGVuZXIgZm9yIHRoZSBtZXNzYWdlIGV2ZW50XG5vbm1lc3NhZ2UgPSBhc3luYyAoZXZlbnQpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IGlucHV0IH0gPSBldmVudC5kYXRhO1xuICAgIGNvbnN0IGhleElucHV0T2JqID0gT2JqZWN0LmVudHJpZXMoaW5wdXQpLnJlZHVjZSgobmV3T2JqLCBba2V5LCB2YWx1ZV0pID0+IHtcbiAgICAgIC8vY2hhbmdlZCBmb3JtYXQgYSBiaXRcbiAgICAgIGlmKGtleT09QSl7XG5cbiAgICAgIH1cbiAgICAgIG5ld09ialtrZXldID0gKHZhbHVlIGFzIG51bWJlcikudG9TdHJpbmcoKTtcbiAgICAgIHJldHVybiBuZXdPYmo7XG4gICAgfSwge30pO1xuXG4gICAgY29uc3Qgbm9pciA9IG5ldyBOb2lyQnJvd3NlcigpO1xuICAgIGF3YWl0IG5vaXIuY29tcGlsZSgpO1xuICAgIGNvbnN0IHByb29mID0gYXdhaXQgbm9pci5jcmVhdGVQcm9vZih7IGlucHV0OiBoZXhJbnB1dE9iaiB9KTtcbiAgICBjb25zb2xlLmxvZyhoZXhJbnB1dE9iaik7XG4gICAgcG9zdE1lc3NhZ2UocHJvb2YpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgIHBvc3RNZXNzYWdlKGVycik7XG4gIH0gZmluYWxseSB7XG4gICAgY2xvc2UoKTtcbiAgfVxufTtcbiJdLCJuYW1lcyI6WyJOb2lyQnJvd3NlciIsIm9ubWVzc2FnZSIsImV2ZW50IiwiaW5wdXQiLCJkYXRhIiwiaGV4SW5wdXRPYmoiLCJPYmplY3QiLCJlbnRyaWVzIiwicmVkdWNlIiwibmV3T2JqIiwia2V5IiwidmFsdWUiLCJBIiwidG9TdHJpbmciLCJub2lyIiwiY29tcGlsZSIsInByb29mIiwiY3JlYXRlUHJvb2YiLCJjb25zb2xlIiwibG9nIiwicG9zdE1lc3NhZ2UiLCJlcnIiLCJjbG9zZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./utils/prover.ts\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ !function() {
/******/ 	__webpack_require__.h = function() { return "0d3a70ed651b7a51"; }
/******/ }();
/******/ 
/******/ }
);