"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("utils_prover_ts",{

/***/ "./utils/prover.ts":
/*!*************************!*\
  !*** ./utils/prover.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_noir_noirBrowser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils/noir/noirBrowser */ \"./utils/noir/noirBrowser.ts\");\n// @ts-ignore\n\n// // Add an event listener for the message event\nonmessage = async (event)=>{\n    try {\n        const { input } = event.data;\n        // handling the response from the worker\n        // sending the acir and input to the worker\n        const input_2 = {\n            c1: {\n                real: {\n                    sign: input.A[0] == \"-\",\n                    value: changeValues(input.A)\n                },\n                imag: {\n                    sign: input.B[0] == \"-\",\n                    value: changeValues(input.B)\n                }\n            },\n            c2: {\n                real: {\n                    sign: input.C[0] == \"-\",\n                    value: changeValues(input.C)\n                },\n                imag: {\n                    sign: input.D[0] == \"-\",\n                    value: changeValues(input.D)\n                }\n            },\n            out_sub: input.subAns,\n            out_mul: input.mulAns,\n            out_div: input.divAns\n        };\n        console.log(input_2);\n        const hexInputObj = Object.entries(input).reduce((newObj, param)=>{\n            let [key, value] = param;\n            //changed format a bit\n            newObj[key] = value.toString();\n            return newObj;\n        }, {});\n        const noir = new _utils_noir_noirBrowser__WEBPACK_IMPORTED_MODULE_0__.NoirBrowser();\n        await noir.compile();\n        const proof = await noir.createProof({\n            input: hexInputObj\n        });\n        console.log(hexInputObj);\n        postMessage(proof);\n    } catch (err) {\n        console.log(err);\n        postMessage(err);\n    } finally{\n        close();\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9wcm92ZXIudHMiLCJtYXBwaW5ncyI6Ijs7QUFBQSxhQUFhO0FBQzZDO0FBRTFELGlEQUFpRDtBQUNqREMsWUFBWSxPQUFPQztJQUNqQixJQUFJO1FBQ0YsTUFBTSxFQUFFQyxLQUFLLEVBQUUsR0FBR0QsTUFBTUUsSUFBSTtRQUU1Qix3Q0FBd0M7UUFDeEMsMkNBQTJDO1FBQzNDLE1BQU1DLFVBQVU7WUFDZEMsSUFBSTtnQkFDRkMsTUFBTTtvQkFDSkMsTUFBTUwsTUFBTU0sQ0FBQyxDQUFDLEVBQUUsSUFBSTtvQkFDcEJDLE9BQU9DLGFBQWFSLE1BQU1NLENBQUM7Z0JBQzdCO2dCQUNBRyxNQUFNO29CQUNKSixNQUFNTCxNQUFNVSxDQUFDLENBQUMsRUFBRSxJQUFJO29CQUNwQkgsT0FBT0MsYUFBYVIsTUFBTVUsQ0FBQztnQkFDN0I7WUFDRjtZQUNBQyxJQUFJO2dCQUNGUCxNQUFNO29CQUNKQyxNQUFNTCxNQUFNWSxDQUFDLENBQUMsRUFBRSxJQUFJO29CQUNwQkwsT0FBT0MsYUFBYVIsTUFBTVksQ0FBQztnQkFDN0I7Z0JBQ0FILE1BQU07b0JBQ0pKLE1BQU1MLE1BQU1hLENBQUMsQ0FBQyxFQUFFLElBQUk7b0JBQ3BCTixPQUFPQyxhQUFhUixNQUFNYSxDQUFDO2dCQUM3QjtZQUNGO1lBQ0FDLFNBQVNkLE1BQU1lLE1BQU07WUFDckJDLFNBQVNoQixNQUFNaUIsTUFBTTtZQUNyQkMsU0FBU2xCLE1BQU1tQixNQUFNO1FBQ3ZCO1FBQ0FDLFFBQVFDLEdBQUcsQ0FBQ25CO1FBQ1osTUFBTW9CLGNBQWNDLE9BQU9DLE9BQU8sQ0FBQ3hCLE9BQU95QixNQUFNLENBQUMsQ0FBQ0M7Z0JBQVEsQ0FBQ0MsS0FBS3BCLE1BQU07WUFDcEUsc0JBQXNCO1lBQ3RCbUIsTUFBTSxDQUFDQyxJQUFJLEdBQUcsTUFBa0JDLFFBQVE7WUFDeEMsT0FBT0Y7UUFDVCxHQUFHLENBQUM7UUFFSixNQUFNRyxPQUFPLElBQUloQyxnRUFBV0E7UUFDNUIsTUFBTWdDLEtBQUtDLE9BQU87UUFDbEIsTUFBTUMsUUFBUSxNQUFNRixLQUFLRyxXQUFXLENBQUM7WUFBRWhDLE9BQU9zQjtRQUFZO1FBQzFERixRQUFRQyxHQUFHLENBQUNDO1FBQ1pXLFlBQVlGO0lBQ2QsRUFBRSxPQUFPRyxLQUFLO1FBQ1pkLFFBQVFDLEdBQUcsQ0FBQ2E7UUFDWkQsWUFBWUM7SUFDZCxTQUFVO1FBQ1JDO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi91dGlscy9wcm92ZXIudHM/OThiZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtaWdub3JlXG5pbXBvcnQgeyBOb2lyQnJvd3NlciB9IGZyb20gXCIuLy4uL3V0aWxzL25vaXIvbm9pckJyb3dzZXJcIjtcblxuLy8gLy8gQWRkIGFuIGV2ZW50IGxpc3RlbmVyIGZvciB0aGUgbWVzc2FnZSBldmVudFxub25tZXNzYWdlID0gYXN5bmMgKGV2ZW50KSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBpbnB1dCB9ID0gZXZlbnQuZGF0YTtcblxuICAgIC8vIGhhbmRsaW5nIHRoZSByZXNwb25zZSBmcm9tIHRoZSB3b3JrZXJcbiAgICAvLyBzZW5kaW5nIHRoZSBhY2lyIGFuZCBpbnB1dCB0byB0aGUgd29ya2VyXG4gICAgY29uc3QgaW5wdXRfMiA9IHtcbiAgICAgIGMxOiB7XG4gICAgICAgIHJlYWw6IHtcbiAgICAgICAgICBzaWduOiBpbnB1dC5BWzBdID09IFwiLVwiLFxuICAgICAgICAgIHZhbHVlOiBjaGFuZ2VWYWx1ZXMoaW5wdXQuQSksXG4gICAgICAgIH0sXG4gICAgICAgIGltYWc6IHtcbiAgICAgICAgICBzaWduOiBpbnB1dC5CWzBdID09IFwiLVwiLFxuICAgICAgICAgIHZhbHVlOiBjaGFuZ2VWYWx1ZXMoaW5wdXQuQiksXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgYzI6IHtcbiAgICAgICAgcmVhbDoge1xuICAgICAgICAgIHNpZ246IGlucHV0LkNbMF0gPT0gXCItXCIsXG4gICAgICAgICAgdmFsdWU6IGNoYW5nZVZhbHVlcyhpbnB1dC5DKSxcbiAgICAgICAgfSxcbiAgICAgICAgaW1hZzoge1xuICAgICAgICAgIHNpZ246IGlucHV0LkRbMF0gPT0gXCItXCIsXG4gICAgICAgICAgdmFsdWU6IGNoYW5nZVZhbHVlcyhpbnB1dC5EKSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICBvdXRfc3ViOiBpbnB1dC5zdWJBbnMsXG4gICAgICBvdXRfbXVsOiBpbnB1dC5tdWxBbnMsXG4gICAgICBvdXRfZGl2OiBpbnB1dC5kaXZBbnMsXG4gICAgfTtcbiAgICBjb25zb2xlLmxvZyhpbnB1dF8yKTtcbiAgICBjb25zdCBoZXhJbnB1dE9iaiA9IE9iamVjdC5lbnRyaWVzKGlucHV0KS5yZWR1Y2UoKG5ld09iaiwgW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgICAvL2NoYW5nZWQgZm9ybWF0IGEgYml0XG4gICAgICBuZXdPYmpba2V5XSA9ICh2YWx1ZSBhcyBudW1iZXIpLnRvU3RyaW5nKCk7XG4gICAgICByZXR1cm4gbmV3T2JqO1xuICAgIH0sIHt9KTtcblxuICAgIGNvbnN0IG5vaXIgPSBuZXcgTm9pckJyb3dzZXIoKTtcbiAgICBhd2FpdCBub2lyLmNvbXBpbGUoKTtcbiAgICBjb25zdCBwcm9vZiA9IGF3YWl0IG5vaXIuY3JlYXRlUHJvb2YoeyBpbnB1dDogaGV4SW5wdXRPYmogfSk7XG4gICAgY29uc29sZS5sb2coaGV4SW5wdXRPYmopO1xuICAgIHBvc3RNZXNzYWdlKHByb29mKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY29uc29sZS5sb2coZXJyKTtcbiAgICBwb3N0TWVzc2FnZShlcnIpO1xuICB9IGZpbmFsbHkge1xuICAgIGNsb3NlKCk7XG4gIH1cbn07XG4iXSwibmFtZXMiOlsiTm9pckJyb3dzZXIiLCJvbm1lc3NhZ2UiLCJldmVudCIsImlucHV0IiwiZGF0YSIsImlucHV0XzIiLCJjMSIsInJlYWwiLCJzaWduIiwiQSIsInZhbHVlIiwiY2hhbmdlVmFsdWVzIiwiaW1hZyIsIkIiLCJjMiIsIkMiLCJEIiwib3V0X3N1YiIsInN1YkFucyIsIm91dF9tdWwiLCJtdWxBbnMiLCJvdXRfZGl2IiwiZGl2QW5zIiwiY29uc29sZSIsImxvZyIsImhleElucHV0T2JqIiwiT2JqZWN0IiwiZW50cmllcyIsInJlZHVjZSIsIm5ld09iaiIsImtleSIsInRvU3RyaW5nIiwibm9pciIsImNvbXBpbGUiLCJwcm9vZiIsImNyZWF0ZVByb29mIiwicG9zdE1lc3NhZ2UiLCJlcnIiLCJjbG9zZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./utils/prover.ts\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ !function() {
/******/ 	__webpack_require__.h = function() { return "6960cb01ea739731"; }
/******/ }();
/******/ 
/******/ }
);